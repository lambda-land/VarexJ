package nesting;
import gov.nasa.jpf.symbc.Symbolic;
import gov.nasa.jpf.vm.Verify;

public class NestJPF_SE {

	public static void main(String[] args) {
		Verify.resetInstructionCounter();
		new NestJPF_SE(Integer.parseInt(args[0]));
	}

	@Symbolic("true") static boolean a1;
	@Symbolic("true") static boolean a2;
	@Symbolic("true") static boolean a3;
	@Symbolic("true") static boolean a4;
	@Symbolic("true") static boolean a5;
	@Symbolic("true") static boolean a6;
	@Symbolic("true") static boolean a7;
	@Symbolic("true") static boolean a8;
	@Symbolic("true") static boolean a9;
	@Symbolic("true") static boolean a10;
	@Symbolic("true") static boolean a11;
	@Symbolic("true") static boolean a12;
	@Symbolic("true") static boolean a13;
	@Symbolic("true") static boolean a14;
	@Symbolic("true") static boolean a15;
	@Symbolic("true") static boolean a16;
	@Symbolic("true") static boolean a17;
	@Symbolic("true") static boolean a18;
	@Symbolic("true") static boolean a19;
	@Symbolic("true") static boolean a20;
	@Symbolic("true") static boolean a21;
	@Symbolic("true") static boolean a22;
	@Symbolic("true") static boolean a23;
	@Symbolic("true") static boolean a24;
	@Symbolic("true") static boolean a25;
	@Symbolic("true") static boolean a26;
	@Symbolic("true") static boolean a27;
	@Symbolic("true") static boolean a28;
	@Symbolic("true") static boolean a29;
	@Symbolic("true") static boolean a30;
	@Symbolic("true")  static boolean a31;
	@Symbolic("true")  static boolean a32;
	@Symbolic("true")  static boolean a33;
	@Symbolic("true")  static boolean a34;
	@Symbolic("true")  static boolean a35;
	@Symbolic("true")  static boolean a36;
	@Symbolic("true")  static boolean a37;
	@Symbolic("true")  static boolean a38;
	@Symbolic("true")  static boolean a39;
	@Symbolic("true")  static boolean a40;
	@Symbolic("true")  static boolean a41;
	@Symbolic("true")  static boolean a42;
	@Symbolic("true")  static boolean a43;
	@Symbolic("true")  static boolean a44;
	@Symbolic("true")  static boolean a45;
	@Symbolic("true")  static boolean a46;
	@Symbolic("true")  static boolean a47;
	@Symbolic("true")  static boolean a48;
	@Symbolic("true")  static boolean a49;
	@Symbolic("true")  static boolean a50;
	@Symbolic("true")  static boolean a51;
	@Symbolic("true")  static boolean a52;
	@Symbolic("true")  static boolean a53;
	@Symbolic("true")  static boolean a54;
	@Symbolic("true")  static boolean a55;
	@Symbolic("true")  static boolean a56;
	@Symbolic("true")  static boolean a57;
	@Symbolic("true")  static boolean a58;
	@Symbolic("true")  static boolean a59;
	@Symbolic("true")  static boolean a60;
	@Symbolic("true")  static boolean a61;
	@Symbolic("true")  static boolean a62;
	@Symbolic("true")  static boolean a63;
	@Symbolic("true")  static boolean a64;
	@Symbolic("true")  static boolean a65;
	@Symbolic("true")  static boolean a66;
	@Symbolic("true")  static boolean a67;
	@Symbolic("true")  static boolean a68;
	@Symbolic("true")  static boolean a69;
	@Symbolic("true")  static boolean a70;
	@Symbolic("true")  static boolean a71;
	@Symbolic("true")  static boolean a72;
	@Symbolic("true")  static boolean a73;
	@Symbolic("true")  static boolean a74;
	@Symbolic("true")  static boolean a75;
	@Symbolic("true")  static boolean a76;
	@Symbolic("true")  static boolean a77;
	@Symbolic("true")  static boolean a78;
	@Symbolic("true")  static boolean a79;
	@Symbolic("true")  static boolean a80;
	@Symbolic("true")  static boolean a81;
	@Symbolic("true")  static boolean a82;
	@Symbolic("true")  static boolean a83;
	@Symbolic("true")  static boolean a84;
	@Symbolic("true")  static boolean a85;
	@Symbolic("true")  static boolean a86;
	@Symbolic("true")  static boolean a87;
	@Symbolic("true")  static boolean a88;
	@Symbolic("true")  static boolean a89;
	@Symbolic("true")  static boolean a90;
	@Symbolic("true")  static boolean a91;
	@Symbolic("true")  static boolean a92;
	@Symbolic("true")  static boolean a93;
	@Symbolic("true")  static boolean a94;
	@Symbolic("true")  static boolean a95;
	@Symbolic("true")  static boolean a96;
	@Symbolic("true")  static boolean a97;
	@Symbolic("true")  static boolean a98;
	@Symbolic("true")  static boolean a99;
	
	@Symbolic("true")  static boolean a100;
	public NestJPF_SE(int max) {
		int i = 0;

		int current = 0;
		if (current++ == max) return;
		if (a1) {i++;if (current++ == max) return;
		if (a2) {i++;if (current++ == max) return;
		if (a3) {i++;if (current++ == max) return;
		if (a4) {i++;if (current++ == max) return;
		if (a5) {i++;if (current++ == max) return;
		if (a6) {i++;if (current++ == max) return;
		if (a7) {i++;if (current++ == max) return;
		if (a8) {i++;if (current++ == max) return;
		if (a9) {i++;if (current++ == max) return;
		if (a10){i++;if (current++ == max) return;
		if (a11){i++;if (current++ == max) return;
		if (a12){i++;if (current++ == max) return;
		if (a13){i++;if (current++ == max) return;
		if (a14){i++;if (current++ == max) return;
		if (a15){i++;if (current++ == max) return;
		if (a16){i++;if (current++ == max) return;
		if (a17){i++;if (current++ == max) return;
		if (a18){i++;if (current++ == max) return;
		if (a19){i++;if (current++ == max) return;
		if (a20){i++;if (current++ == max) return;
		if (a21){i++;if (current++ == max) return;
		if (a22){i++;if (current++ == max) return;
		if (a23){i++;if (current++ == max) return;
		if (a24){i++;if (current++ == max) return;
		if (a25){i++;if (current++ == max) return;
		if (a26){i++;if (current++ == max) return;
		if (a27){i++;if (current++ == max) return;
		if (a28){i++;if (current++ == max) return;
		if (a29){i++;if (current++ == max) return;
		if (a30){i++;if (current++ == max) return;
		if (a31){i++;if (current++ == max) return;
		if (a32){i++;if (current++ == max) return;
		if (a33){i++;if (current++ == max) return;
		if (a34){i++;if (current++ == max) return;
		if (a35){i++;if (current++ == max) return;
		if (a36){i++;if (current++ == max) return;
		if (a37){i++;if (current++ == max) return;
		if (a38){i++;if (current++ == max) return;
		if (a39){i++;if (current++ == max) return;
		if (a40){i++;if (current++ == max) return;
		if (a41){i++;if (current++ == max) return;
		if (a42){i++;if (current++ == max) return;
		if (a43){i++;if (current++ == max) return;
		if (a44){i++;if (current++ == max) return;
		if (a45){i++;if (current++ == max) return;
		if (a46){i++;if (current++ == max) return;
		if (a47){i++;if (current++ == max) return;
		if (a48){i++;if (current++ == max) return;
		if (a49){i++;if (current++ == max) return;
		if (a50){i++;if (current++ == max) return;
		if (a51){i++;if (current++ == max) return;
		if (a52){i++;if (current++ == max) return;
		if (a53){i++;if (current++ == max) return;
		if (a54){i++;if (current++ == max) return;
		if (a55){i++;if (current++ == max) return;
		if (a56){i++;if (current++ == max) return;
		if (a57){i++;if (current++ == max) return;
		if (a58){i++;if (current++ == max) return;
		if (a59){i++;if (current++ == max) return;
		if (a60){i++;if (current++ == max) return;
		if (a61){i++;if (current++ == max) return;
		if (a62){i++;if (current++ == max) return;
		if (a63){i++;if (current++ == max) return;
		if (a64){i++;if (current++ == max) return;
		if (a65){i++;if (current++ == max) return;
		if (a66){i++;if (current++ == max) return;
		if (a67){i++;if (current++ == max) return;
		if (a68){i++;if (current++ == max) return;
		if (a69){i++;if (current++ == max) return;
		if (a70){i++;if (current++ == max) return;
		if (a71){i++;if (current++ == max) return;
		if (a72){i++;if (current++ == max) return;
		if (a73){i++;if (current++ == max) return;
		if (a74){i++;if (current++ == max) return;
		if (a75){i++;if (current++ == max) return;
		if (a76){i++;if (current++ == max) return;
		if (a77){i++;if (current++ == max) return;
		if (a78){i++;if (current++ == max) return;
		if (a79){i++;if (current++ == max) return;
		if (a80){i++;if (current++ == max) return;
		if (a81){i++;if (current++ == max) return;
		if (a82){i++;if (current++ == max) return;
		if (a83){i++;if (current++ == max) return;
		if (a84){i++;if (current++ == max) return;
		if (a85){i++;if (current++ == max) return;
		if (a86){i++;if (current++ == max) return;
		if (a87){i++;if (current++ == max) return;
		if (a88){i++;if (current++ == max) return;
		if (a89){i++;if (current++ == max) return;
		if (a90){i++;if (current++ == max) return;
		if (a91){i++;if (current++ == max) return;
		if (a92){i++;if (current++ == max) return;
		if (a93){i++;if (current++ == max) return;
		if (a94){i++;if (current++ == max) return;
		if (a95){i++;if (current++ == max) return;
		if (a96){i++;if (current++ == max) return;
		if (a97){i++;if (current++ == max) return;
		if (a98){i++;if (current++ == max) return;
		if (a99){i++;if (current++ == max) return;
		if (a100){i++;if (current++ == max) return;
		
		}}}}}}}}}}
		}}}}}}}}}}
		}}}}}}}}}}
		}}}}}}}}}}
		}}}}}}}}}}
		}}}}}}}}}}
		}}}}}}}}}}
		}}}}}}}}}}
		}}}}}}}}}}
		}}}}}}}}}}
	}
}
